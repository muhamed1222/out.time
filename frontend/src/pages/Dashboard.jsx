import React, { useState, useEffect } from 'react';
import { dashboardService } from '../services/dashboardService';
import { toast } from 'react-hot-toast';
import { format } from 'date-fns';
import { 
  StatsCard, 
  Card, 
  CardHeader, 
  CardTitle, 
  CardContent,
  LoadingSkeleton,
  EmptyState,
  Badge,
  statsColorSchemes,
  statsIcons
} from '../components/ui';

const Dashboard = () => {
  const [dashboardData, setDashboardData] = useState({
    todayStats: {
      totalEmployees: 0,
      workingToday: 0,
      sickToday: 0,
      vacationToday: 0,
      reportsToday: 0,
      averageWorkHours: '0.0'
    },
    recentReports: [],
    employeeStats: []
  });
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    loadDashboardData();
  }, []);

  const loadDashboardData = async () => {
    try {
      const data = await dashboardService.getDashboardData();
      setDashboardData(data);
    } catch (error) {
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞');
    } finally {
      setIsLoading(false);
    }
  };

  if (isLoading) {
    return (
      <div className="space-content">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <Card>
          <div className="mb-6">
            <div className="animate-pulse bg-gray-200 dark:bg-gray-700 h-8 w-48 rounded mb-2"></div>
            <div className="animate-pulse bg-gray-200 dark:bg-gray-700 h-4 w-64 rounded"></div>
          </div>
        </Card>

        {/* –°–∫–µ–ª–µ—Ç–æ–Ω—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {Array.from({ length: 4 }, (_, i) => (
            <LoadingSkeleton key={i} type="stats" />
          ))}
        </div>

        {/* –°–∫–µ–ª–µ—Ç–æ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç—á–µ—Ç–æ–≤ */}
        <Card>
          <CardHeader>
            <div className="animate-pulse bg-gray-200 dark:bg-gray-700 h-6 w-40 rounded"></div>
          </CardHeader>
          <CardContent>
            <LoadingSkeleton type="list" items={3} />
          </CardContent>
        </Card>
      </div>
    );
  }

  const { todayStats } = dashboardData;

  return (
    <div className="space-content">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
      <Card className="fade-in">
        <div className="mb-6">
          <h1 className="text-heading dark:text-white">–î–∞—à–±–æ—Ä–¥</h1>
          <p className="text-caption dark:text-gray-400">–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–º–ø–∞–Ω–∏–∏</p>
        </div>
      </Card>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {/* –†–∞–±–æ—Ç–∞—é—Ç —Å–µ–≥–æ–¥–Ω—è */}
        <StatsCard
          icon={statsIcons.users}
          title="–†–∞–±–æ—Ç–∞—é—Ç —Å–µ–≥–æ–¥–Ω—è"
          value={`${todayStats.workingToday}/${todayStats.totalEmployees}`}
          color={statsColorSchemes.success}
          trend={todayStats.workingToday > 0 ? 
            Math.round((todayStats.workingToday / todayStats.totalEmployees) * 100) - 80 : 
            null
          }
          className="fade-in"
          style={{ animationDelay: '0.1s' }}
          />

        {/* –û—Ç—á–µ—Ç—ã —Å–µ–≥–æ–¥–Ω—è */}
        <StatsCard
          icon={statsIcons.reports}
          title="–û—Ç—á–µ—Ç—ã —Å–µ–≥–æ–¥–Ω—è"
          value={todayStats.reportsToday}
          color={statsColorSchemes.blue}
          trend={todayStats.reportsToday > 5 ? 15 : todayStats.reportsToday > 2 ? 5 : -10}
          className="fade-in"
          style={{ animationDelay: '0.2s' }}
        />

        {/* –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å */}
        <StatsCard
          icon={statsIcons.clock}
          title="–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
          value={`${todayStats.averageWorkHours}—á`}
          subtitle="—Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è"
          color={statsColorSchemes.cyan}
          trend={parseFloat(todayStats.averageWorkHours) > 8 ? 8 : -5}
          className="fade-in"
          style={{ animationDelay: '0.3s' }}
        />

        {/* –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç */}
        <StatsCard
          icon={statsIcons.absent}
          title="–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞ —Ä–∞–±–æ—Ç–µ"
          value={todayStats.sickToday + todayStats.vacationToday}
          subtitle={`–±–æ–ª—å–Ω–∏—á–Ω—ã—Ö: ${todayStats.sickToday}, –æ—Ç–ø—É—Å–∫–æ–≤: ${todayStats.vacationToday}`}
          color={statsColorSchemes.warning}
          trend={todayStats.sickToday + todayStats.vacationToday > 2 ? 25 : -10}
          className="fade-in"
          style={{ animationDelay: '0.4s' }}
        />
      </div>

      {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã */}
      <Card className="fade-in" style={{ animationDelay: '0.5s' }}>
        <CardHeader>
          <CardTitle className="dark:text-white">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã</CardTitle>
        </CardHeader>
        <CardContent>
          {dashboardData.recentReports.length > 0 ? (
            <div className="space-items">
              {dashboardData.recentReports.map((report, index) => (
                <Card 
                  key={report.id} 
                  variant="flat" 
                  className="hover-lift"
                  style={{ animationDelay: `${0.6 + index * 0.1}s` }}
                >
                  <div className="flex justify-between items-start">
                    <div className="flex-1">
                      <h4 className="text-subheading text-gray-900 dark:text-white">
                        {report.employeeName}
                      </h4>
                      <p className="text-body mt-1 dark:text-gray-300">
                        {report.content}
                      </p>
                    </div>
                    <div className="text-right ml-4">
                      <p className="text-caption dark:text-gray-400">
                        {format(new Date(report.date), 'dd.MM.yyyy')}
                      </p>
                      <p className="text-caption text-gray-400 dark:text-gray-500">
                        {format(new Date(report.createdAt), 'HH:mm:ss')}
                      </p>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          ) : (
            <EmptyState
              title="–ù–µ—Ç –æ—Ç—á–µ—Ç–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è"
              description="–û—Ç—á–µ—Ç—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å –ø–æ –º–µ—Ä–µ –∏—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è"
              icon="üìä"
              action={{
                label: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ—Ç—á–µ—Ç—ã",
                href: "/reports"
              }}
            />
          )}
        </CardContent>
      </Card>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ) */}
      {dashboardData.employeeStats?.length > 0 && (
        <Card className="fade-in" style={{ animationDelay: '0.7s' }}>
          <CardHeader>
            <CardTitle className="dark:text-white">–¢–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {dashboardData.employeeStats.slice(0, 3).map((employee, index) => (
                <Card 
                  key={employee.id}
                  variant="flat"
                  className="hover-lift"
                  style={{ animationDelay: `${0.8 + index * 0.1}s` }}
                >
                  <div className="text-center">
                    <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full mx-auto mb-3 flex items-center justify-center text-white font-semibold">
                      {employee.name?.charAt(0)?.toUpperCase() || '?'}
                    </div>
                    <h5 className="text-subheading text-gray-900 dark:text-white">
                      {employee.name}
                    </h5>
                    <p className="text-caption dark:text-gray-400">
                      {employee.totalReports} –æ—Ç—á–µ—Ç–æ–≤
                    </p>
                    <Badge 
                      variant="outline" 
                      className="mt-2"
                    >
                      #{index + 1}
                    </Badge>
                  </div>
                </Card>
              ))}
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default Dashboard; 