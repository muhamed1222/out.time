require('dotenv').config();
const app = require('./src/app');
const { bot } = require('./src/bot');
const CronService = require('./src/services/cronService');
const { testConnection } = require('./src/config/database');

const PORT = process.env.PORT || 3000;

async function startServer() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ Out Time...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const requiredEnvVars = ['DATABASE_URL', 'JWT_SECRET', 'BOT_TOKEN'];
    const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);
    
    if (missingVars.length > 0) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
      missingVars.forEach(varName => console.error(`   - ${varName}`));
      console.error('\nüí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏');
      
      if (process.env.NODE_ENV === 'production') {
        process.exit(1);
      } else {
        console.log('‚ö†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const dbConnected = await testConnection();
    if (!dbConnected) {
      if (process.env.NODE_ENV === 'production') {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        process.exit(1);
      } else {
        console.log('‚ö†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑ –ë–î (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è UI)');
      }
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
    const server = app.listen(PORT, () => {
      console.log(`‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
      console.log(`üåê Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:${PORT}/api-docs`);
      console.log(`ü©∫ Health check: http://localhost:${PORT}/api/public/health`);
    });

    // –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ (–ø–æ–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    if (process.env.BOT_TOKEN) {
      try {
        console.log('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');
        await bot.launch();
        console.log('‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');
      } catch (error) {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –±–æ—Ç–∞):', error.message);
        console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ');
      }
    } else {
      console.log('‚ö†Ô∏è BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞');
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –ë–î)
    if (dbConnected) {
      CronService.init();
    } else {
      console.log('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–Ω–µ—Ç –ë–î)');
    }

    // Graceful shutdown
    const gracefulShutdown = async (signal) => {
      console.log(`\nüì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª ${signal}, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä...`);
      
      if (process.env.BOT_TOKEN) {
        bot.stop(signal);
        console.log('‚úÖ Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      }
      
      await new Promise((resolve) => {
      server.close(() => {
        console.log('‚úÖ API —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
          resolve();
        });
      });

      console.log('üëã –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
      process.exit(0);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    process.once('SIGINT', gracefulShutdown);
    process.once('SIGTERM', gracefulShutdown);

    console.log('\nüéâ –°–∏—Å—Ç–µ–º–∞ Out Time –∑–∞–ø—É—â–µ–Ω–∞!');
    console.log('üìä –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:');
    console.log('   ‚úÖ API —Å–µ—Ä–≤–µ—Ä (Express.js)');
    console.log(`   ${process.env.BOT_TOKEN ? '‚úÖ' : '‚ö†Ô∏è'} Telegram –±–æ—Ç`);
    console.log(`   ${dbConnected ? '‚úÖ' : '‚ö†Ô∏è'} –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL`);
    console.log(`   ${dbConnected ? '‚úÖ' : '‚ö†Ô∏è'} –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);
    
    if (process.env.NODE_ENV === 'development') {
      console.log('\nüß™ –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∞–∫—Ç–∏–≤–µ–Ω');
      console.log('üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
      console.log('   - API: http://localhost:3000/api');
      console.log('   - Health check: http://localhost:3000/api/public/health');
      console.log('   - Frontend: http://localhost:5173');
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
process.on('unhandledRejection', (reason, promise) => {
  console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ Promise:', reason);
  console.error('Promise:', promise);
  // –ù–µ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
});

process.on('uncaughtException', (error) => {
  console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
  process.exit(1);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
startServer(); 